{"version":3,"sources":["Components/NavBar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","mode","href","title","type","id","onClick","togglemode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","map","word","charAt","slice","join","navigator","clipboard","writeText","filter","element","replace","toFixed","defaultProps","about","Alert","height","alert","role","lower","capitalize","msg","App","setmode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c0a691c8.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function NavBar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className='container-fluid'>\r\n          <a className='navbar-brand' href='#'>\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className='navbar-toggler'\r\n            type='button'\r\n            data-bs-toggle='collapse'\r\n            data-bs-target='#navbarSupportedContent'\r\n            aria-controls='navbarSupportedContent'\r\n            aria-expanded='false'\r\n            aria-label='Toggle navigation'\r\n          >\r\n            <span className='navbar-toggler-icon'></span>\r\n          </button>\r\n          <div className='collapse navbar-collapse' id='navbarSupportedContent'>\r\n            <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\r\n              <li className='nav-item'>\r\n                <a className='nav-link active' aria-current='page' href='#'>\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className='nav-item'>\r\n                <a className='nav-link' href='#'>\r\n                  {props.about}\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === 'light' ? 'dark' : 'light'\r\n              }`}\r\n            >\r\n              <input\r\n                className='form-check-input'\r\n                onClick={props.togglemode}\r\n                type='checkbox'\r\n                id='modebtn'\r\n              />\r\n              <label\r\n                className='form-check-label'\r\n                htmlFor='flexSwitchCheckDefault'\r\n              >\r\n                Enable Darkmode\r\n              </label>\r\n            </div>\r\n            {/* <form className='d-flex'>\r\n              <input\r\n                className='form-control me-2'\r\n                type='search'\r\n                placeholder='Search'\r\n                aria-label='Search'\r\n              />\r\n              <button className='btn btn-primary' type='submit'>\r\n                Search\r\n              </button>\r\n            </form> */}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavBar.propTypes = { title: PropTypes.string, about: PropTypes.string }\r\n\r\nNavBar.defaultProps = { title: 'Set Title here', about: 'About' }\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase()\r\n    setText(newText)\r\n    props.showAlert('Converted to Uppercase!', 'success')\r\n  }\r\n\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase()\r\n    setText(newText)\r\n    props.showAlert('Converted to Lowercase!', 'success')\r\n  }\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text)\r\n    props.showAlert('Copied to Clipboard!', 'success')\r\n  }\r\n\r\n  const handleTitleClick = () => {\r\n    let newText = text\r\n      .toLowerCase()\r\n      .split(' ')\r\n      .map(function (word) {\r\n        return word.charAt(0).toUpperCase() + word.slice(1)\r\n      })\r\n      .join(' ')\r\n\r\n    setText(newText)\r\n    props.showAlert('Converted to Titlecase!', 'success')\r\n  }\r\n\r\n  const handleSenClick = () => {\r\n    let newText = text[0].toUpperCase() + text.slice(1).toLowerCase()\r\n    setText(newText)\r\n    props.showAlert('Converted to Sentencecase!', 'success')\r\n  }\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/)\r\n    setText(newText.join(' '))\r\n    props.showAlert('Extra spaces removed!', 'success')\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value)\r\n  }\r\n  const handleClearClick = () => {\r\n    let newText = ''\r\n    setText(newText)\r\n    props.showAlert('Text Cleared!', 'success')\r\n  }\r\n\r\n  const [text, setText] = useState('')\r\n  return (\r\n    <>\r\n      <div className='mb-3'>\r\n        <h1 style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n          {props.heading}\r\n        </h1>\r\n        <h5 style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n          Try TextUtils - Word Counter, Character Counter, Remove extra spaces,\r\n          Copy Text, Convert text from Uppercase to lowercase and lowercase to\r\n          Uppercase, Titlecase and Sentence Case.\r\n        </h5>\r\n        <textarea\r\n          className='form-control'\r\n          id='myBox'\r\n          rows='10'\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          style={{\r\n            backgroundColor: props.mode === 'dark' ? '#13466e' : 'white',\r\n            color: props.mode === 'dark' ? 'white' : 'black',\r\n          }}\r\n        ></textarea>\r\n        <button\r\n          disabled={text.length === 0}\r\n          type='button'\r\n          className='btn btn-primary my-1 mx-1'\r\n          onClick={handleUpClick}\r\n        >\r\n          Upper Case\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          type='button'\r\n          className='btn btn-primary my-1 mx-1'\r\n          onClick={handleLoClick}\r\n        >\r\n          Lover Case\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          type='button'\r\n          className='btn btn-primary my-1 mx-1'\r\n          onClick={handleTitleClick}\r\n        >\r\n          Title Case\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          type='button'\r\n          className='btn btn-primary my-1 mx-1'\r\n          onClick={handleSenClick}\r\n        >\r\n          Sentence Case\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          type='button'\r\n          className='btn btn-primary my-1 mx-1'\r\n          onClick={handleCopy}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          type='button'\r\n          className='btn btn-primary my-1 mx-1'\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          type='button'\r\n          className='btn btn-primary my-1 mx-1'\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div\r\n            className='output  col-sm-6 col-md-6 col-lg-6'\r\n            style={{\r\n              backgroundColor: props.mode === 'dark' ? '#13466e' : 'white',\r\n              color: props.mode === 'dark' ? 'white' : 'black',\r\n            }}\r\n          >\r\n            <p>\r\n              Characters: <span>{text.length}</span>\r\n            </p>\r\n          </div>\r\n          <div\r\n            className='output col-sm-6 col-md-6 col-lg-6'\r\n            style={{\r\n              backgroundColor: props.mode === 'dark' ? '#13466e' : 'white',\r\n              color: props.mode === 'dark' ? 'white' : 'black',\r\n            }}\r\n          >\r\n            <p>\r\n              Words:\r\n              <span>\r\n                {\r\n                  text.split(/\\s+/).filter((element) => {\r\n                    return element.length !== 0\r\n                  }).length\r\n                }\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div\r\n            className='output  col-sm-6 col-md-6 col-lg-6'\r\n            style={{\r\n              backgroundColor: props.mode === 'dark' ? '#13466e' : 'white',\r\n              color: props.mode === 'dark' ? 'white' : 'black',\r\n            }}\r\n          >\r\n            <p>\r\n              Sentences:\r\n              <span>{text.split(/[.|!|?]+/g).length - 1}</span>\r\n            </p>\r\n          </div>\r\n          <div\r\n            className='output col-sm-6 col-md-6 col-lg-6'\r\n            style={{\r\n              backgroundColor: props.mode === 'dark' ? '#13466e' : 'white',\r\n              color: props.mode === 'dark' ? 'white' : 'black',\r\n            }}\r\n          >\r\n            <p>\r\n              Paragraphs:\r\n              <span>\r\n                {\r\n                  text\r\n                    .replace(/\\n$/gm, '')\r\n                    .split(/\\n/)\r\n                    .filter((element) => {\r\n                      return element.length !== 0\r\n                    }).length\r\n                }\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div\r\n            className='output  col-sm-6 col-md-6 col-lg-6'\r\n            style={{\r\n              backgroundColor: props.mode === 'dark' ? '#13466e' : 'white',\r\n              color: props.mode === 'dark' ? 'white' : 'black',\r\n            }}\r\n          >\r\n            <p>\r\n              Reading Time:\r\n              <span>\r\n                {(\r\n                  text.split(' ').filter((element) => {\r\n                    return element.length !== 0\r\n                  }).length * 0.008\r\n                ).toFixed(2) <= 0.99\r\n                  ? (\r\n                      text.split(' ').filter((element) => {\r\n                        return element.length !== 0\r\n                      }).length * 0.008\r\n                    ).toFixed(2) + 's'\r\n                  : (\r\n                      text.split(' ').filter((element) => {\r\n                        return element.length !== 0\r\n                      }).length * 0.008\r\n                    ).toFixed(2) + 'm'}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div\r\n            className='col-sm-12 col-md-12 col-lg-12'\r\n            style={{\r\n              backgroundColor: props.mode === 'dark' ? '#13466e' : 'white',\r\n              color: props.mode === 'dark' ? 'white' : 'black',\r\n            }}\r\n          >\r\n            <h4>\r\n              Preview: <h6>{text.length > 0 ? text : 'Nothing to preview!'}</h6>\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase()\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n  }\r\n  return (\r\n    <div id='alts' style={{ height: '50px' }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role='alert'\r\n        >\r\n          <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css'\nimport NavBar from './Components/NavBar'\nimport { useState } from 'react'\nimport TextForm from './Components/TextForm'\nimport Alert from './Components/Alert'\n// import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nfunction App() {\n  const [mode, setmode] = useState('light') //Whther darkmode is on or not\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500)\n  }\n\n  const togglemode = () => {\n    if (mode === 'light') {\n      setmode('dark')\n      document.body.style.backgroundColor = '#042743'\n      showAlert('Dark mode has been enabled', 'success')\n    } else {\n      setmode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert('Light mode has been enabled', 'success')\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n      <NavBar\n        title='TextUtils'\n        // about='About'\n        mode={mode}\n        togglemode={togglemode}\n      />\n      <Alert alert={alert} />\n\n      <div className='container myCon my-4'>\n        {/* <Switch> */}\n        {/* <Route exact path='/About'>\n              <About />\n            </Route> */}\n        {/* <Route exact path='/'> */}\n        <TextForm showAlert={showAlert} heading='TextUtils' mode={mode} />\n        {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}